// This script was generated by http://build.paychex.com:8080/job/EBA_Generate_Gradle_BuildScript/132/
buildscript {
    repositories {
        maven { url 'https://repository.paychex.com/artifactory/internal-artifacts' }
        maven { url 'https://repository.paychex.com/artifactory/plugins-release' }
		maven { url 'https://repository.paychex.com/artifactory/gradle-plugins' }
    }
    dependencies {
		classpath enforcedPlatform('com.paychex.slac:dvs-gradle-bom:7.+')
        classpath 'com.paychex.eba:internal-artifacts'
        classpath 'com.paychex.eba:xldeploy-publish'
        classpath 'com.paychex.eba:artifactorize-xldeploy-publish'
		classpath 'com.paychex.slac:checkmarx-scan-plugin'
		classpath 'com.paychex.slac:git-state'
		classpath 'nu.studer:gradle-credentials-plugin:1.0.6'
        classpath 'com.paychex.slac:gradle-plugin-sca'
    }
}

apply plugin: 'com.paychex.eba.internal-artifacts'
apply plugin: 'com.paychex.eba.xldeploy-publish'
apply plugin: 'com.paychex.eba.artifactorize-xldeploy-publish'
apply plugin: 'com.paychex.slac.checkmarx-scan-plugin'
apply plugin: 'com.paychex.slac.git-state'
apply plugin: 'nu.studer.credentials'
apply plugin: 'com.paychex.slac.sca'


def targetXLDeployServer = xlDeployServer {
    host = System.getenv('XLDEPLOY_HOST') ?: 'devdeploy.paychex.com'
    port = System.getenv('XLDEPLOY_PORT') ?: 80

    /* If these vars are null but required for a task, the user will be prompted.
	So no need to set these for local dev. Just set for Jenkins builds. */
    username = System.getenv('deployitUsername')
    password = System.getenv('deployitPassword')
}

task xlDeployPackage_stratustime_clocks(type: XLDeployPackage) {
    server = targetXLDeployServer
    application = 'stratustime_clocks'
    orchestrator = ['parallel-by-deployed', 'sequential-by-deployment-group', 'parallel-by-deployment-sub-group', 'parallel-by-deployment-sub-sub-group', 'sequential-by-dependency']
    version = "${System.env.BRANCH_TO_BUILD}_${System.env.BUILD_NUMBER}"
    deployables {
        artifact {
            type = 'file.File'
            name = 'stratustime_clocks_Latham'
            file = 'WinCE\\bin\\Release\\NETOne.exe'
            properties {
                createTargetPath = 'true'
                tags = ['stratustime_clocks','stm-aze-poc-web-content','stm-aze-pocwest-web-content']
                targetFileName = 'NETOne.exe'
                targetPath = "{{time-aze-svc-targetpath}}\\stratustime_Clocks_Latham"
                targetPathShared = 'true'
                targetPathSharedSubDirectories = 'true'
                scanPlaceholders = 'false'
                textFileNamesRegex = '.+\\.(cfg | conf | config | ini | properties | props | txt | asp | aspx | htm | html | jsf | jsp | xht | xhtml | sql | xml | xsd | xsl | xslt | ps1 | exe)'
            }
        }
        artifact {
            type = 'file.File'
            name = 'stratustime_clocks_ZkClock'
            file = 'WinCE\\bin\\ZClock\\NETOne.exe'
            properties {
                createTargetPath = 'true'
                tags = ['stratustime_clocks','stm-aze-poc-web-content','stm-aze-pocwest-web-content']
                targetFileName = 'NETOne.exe'
                targetPath = "{{time-aze-svc-targetpath}}\\stratustime_Clocks_ZkClock"
                targetPathShared = 'true'
                targetPathSharedSubDirectories = 'true'
                scanPlaceholders = 'false'
                textFileNamesRegex = '.+\\.(cfg | conf | config | ini | properties | props | txt | asp | aspx | htm | html | jsf | jsp | xht | xhtml | sql | xml | xsd | xsl | xslt | ps1 | exe)'
            }
        }
    }
}

task xlDeployPublish_stratustime_clocks(type: XLDeployPublish) {
    server = targetXLDeployServer
    into ('Applications/stratustime') {
        from xlDeployPackage_stratustime_clocks
    }
}

task xlDeployPackage (dependsOn: ['xlDeployPackage_stratustime_clocks'])

task xlDeployPublish (dependsOn: ['xlDeployPublish_stratustime_clocks'])

task scaScanTask(type: ScaScanTask) {
    scaLineOfBusiness = 'time'
    scaComponent = 'stratustimeclocks'
    scaConsumer = 'clt'
}




